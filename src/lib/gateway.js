import fetch from "node-fetch";
import Agent from "keepalive-proxy-agent";
import { randomUUID } from "crypto";
import { fileURLToPath } from 'url';
import * as path from 'path';
import * as fs from "fs";
import * as db from "./db.js";
import { getLogger, Core } from "../../main.js";
import { scheduleJob } from "node-schedule";

const s2tTable = {
    '―': '─',
    '‖': '∥',
    '″': '〞',
    '∏': 'Π',
    '∑': 'Σ',
    '∧': '︿',
    '∨': '﹀',
    '∶': '︰',
    '≈': '≒',
    '≤': '≦',
    '≥': '≧',
    '━': '─',
    '┃': '│',
    '┏': '┌',
    '┓': '┐',
    '┗': '└',
    '┛': '┘',
    '┣': '├',
    '┫': '┤',
    '┳': '┬',
    '┻': '┴',
    '╋': '┼',
    '〖': '【',
    '〗': '】',
    '㑇': '㑳',
    '㖞': '喎',
    '㘎': '㘚',
    '㤘': '㥮',
    '㧏': '掆',
    '㧐': '㩳',
    '㧟': '擓',
    '㭎': '棡',
    '㳠': '澾',
    '䁖': '瞜',
    '䅟': '穇',
    '䌷': '紬',
    '䎬': '䎱',
    '䏝': '膞',
    '䓖': '藭',
    '䙌': '䙡',
    '䜣': '訢',
    '䜩': '讌',
    '䞍': '䝼',
    '䥺': '釾',
    '䥽': '鏺',
    '䦂': '䥇',
    '䦃': '鐯',
    '䦅': '鐥',
    '䦆': '钁',
    '䦶': '䦛',
    '䦷': '䦟',
    '䲟': '鮣',
    '䲡': '鰌',
    '䲢': '鰧',
    '䲣': '䱷',
    '䴓': '鳾',
    '䴔': '鵁',
    '䴕': '鴷',
    '䴖': '鶄',
    '䴗': '鶪',
    '䴘': '鷉',
    '䴙': '鸊',
    '䶮': '龑',
    '专': '專',
    '业': '業',
    '丛': '叢',
    '东': '東',
    '丝': '絲',
    '丢': '丟',
    '两': '兩',
    '严': '嚴',
    '丧': '喪',
    '个': '個',
    '临': '臨',
    '为': '為',
    '丽': '麗',
    '举': '舉',
    '义': '義',
    '乌': '烏',
    '乐': '樂',
    '乔': '喬',
    '习': '習',
    '乡': '鄉',
    '书': '書',
    '买': '買',
    '乱': '亂',
    '争': '爭',
    '亏': '虧',
    '亘': '亙',
    '亚': '亞',
    '产': '產',
    '亩': '畝',
    '亲': '親',
    '亵': '褻',
    '亿': '億',
    '仅': '僅',
    '从': '從',
    '仑': '侖',
    '仓': '倉',
    '仪': '儀',
    '们': '們',
    '众': '眾',
    '会': '會',
    '伛': '傴',
    '伞': '傘',
    '伟': '偉',
    '传': '傳',
    '伤': '傷',
    '伥': '倀',
    '伦': '倫',
    '伧': '傖',
    '伪': '偽',
    '伫': '佇',
    '伲': '你',
    '佥': '僉',
    '侠': '俠',
    '侣': '侶',
    '侥': '僥',
    '侦': '偵',
    '侧': '側',
    '侨': '僑',
    '侩': '儈',
    '侪': '儕',
    '侬': '儂',
    '俣': '俁',
    '俦': '儔',
    '俨': '儼',
    '俩': '倆',
    '俪': '儷',
    '俭': '儉',
    '倮': '裸',
    '债': '債',
    '倾': '傾',
    '偬': '傯',
    '偻': '僂',
    '偾': '僨',
    '偿': '償',
    '傥': '儻',
    '傧': '儐',
    '储': '儲',
    '傩': '儺',
    '兑': '兌',
    '兖': '兗',
    '兰': '蘭',
    '关': '關',
    '兴': '興',
    '兹': '茲',
    '养': '養',
    '兽': '獸',
    '冁': '囅',
    '内': '內',
    '冈': '岡',
    '册': '冊',
    '写': '寫',
    '军': '軍',
    '农': '農',
    '冯': '馮',
    '冲': '沖',
    '决': '決',
    '况': '況',
    '冻': '凍',
    '净': '淨',
    '凇': '淞',
    '凉': '涼',
    '减': '減',
    '凑': '湊',
    '凛': '凜',
    '凤': '鳳',
    '処': '處',
    '凫': '鳧',
    '凭': '憑',
    '凯': '凱',
    '击': '擊',
    '凼': '幽',
    '凿': '鑿',
    '刍': '芻',
    '刘': '劉',
    '则': '則',
    '刚': '剛',
    '创': '創',
    '删': '刪',
    '别': '別',
    '刬': '剗',
    '刭': '剄',
    '刹': '剎',
    '刽': '劊',
    '刿': '劌',
    '剀': '剴',
    '剂': '劑',
    '剐': '剮',
    '剑': '劍',
    '剥': '剝',
    '剧': '劇',
    '剳': '劄',
    '劝': '勸',
    '办': '辦',
    '务': '務',
    '劢': '勱',
    '动': '動',
    '励': '勵',
    '劲': '勁',
    '劳': '勞',
    '势': '勢',
    '勋': '勳',
    '勚': '勩',
    '匀': '勻',
    '匦': '匭',
    '匮': '匱',
    '区': '區',
    '医': '醫',
    '华': '華',
    '协': '協',
    '单': '單',
    '卖': '賣',
    '卢': '盧',
    '卤': '鹵',
    '卧': '臥',
    '卫': '衛',
    '却': '卻',
    '卺': '巹',
    '厅': '廳',
    '历': '歷',
    '厉': '厲',
    '压': '壓',
    '厌': '厭',
    '厍': '厙',
    '厕': '廁',
    '厢': '廂',
    '厣': '厴',
    '厦': '廈',
    '厨': '廚',
    '厩': '廄',
    '厮': '廝',
    '县': '縣',
    '叁': '參',
    '参': '參',
    '叆': '靉',
    '叇': '靆',
    '双': '雙',
    '发': '發',
    '变': '變',
    '叙': '敘',
    '叠': '疊',
    '叶': '葉',
    '号': '號',
    '叹': '嘆',
    '叽': '嘰',
    '吓': '嚇',
    '吕': '呂',
    '吗': '嗎',
    '启': '啟',
    '吴': '吳',
    '呐': '吶',
    '呒': '嘸',
    '呓': '囈',
    '呕': '嘔',
    '呖': '嚦',
    '呗': '唄',
    '员': '員',
    '呙': '咼',
    '呛': '嗆',
    '呜': '嗚',
    '咏': '詠',
    '咙': '嚨',
    '咛': '嚀',
    '咝': '噝',
    '哌': '呱',
    '响': '響',
    '哑': '啞',
    '哒': '噠',
    '哓': '嘵',
    '哔': '嗶',
    '哕': '噦',
    '哗': '嘩',
    '哙': '噲',
    '哜': '嚌',
    '哝': '噥',
    '哟': '喲',
    '唛': '嘜',
    '唝': '嗊',
    '唠': '嘮',
    '唡': '啢',
    '唢': '嗩',
    '唤': '喚',
    '啓': '啟',
    '啧': '嘖',
    '啬': '嗇',
    '啭': '囀',
    '啮': '齧',
    '啰': '囉',
    '啸': '嘯',
    '喷': '噴',
    '喽': '嘍',
    '喾': '嚳',
    '嗫': '囁',
    '嗬': '呵',
    '嗳': '噯',
    '嘘': '噓',
    '嘤': '嚶',
    '嘱': '囑',
    '噜': '嚕',
    '嚣': '囂',
    '团': '團',
    '园': '園',
    '囯': '國',
    '囱': '囪',
    '围': '圍',
    '囵': '圇',
    '国': '國',
    '图': '圖',
    '圆': '圓',
    '圹': '壙',
    '场': '場',
    '坂': '阪',
    '块': '塊',
    '坚': '堅',
    '坛': '壇',
    '坜': '壢',
    '坝': '壩',
    '坞': '塢',
    '坟': '墳',
    '坠': '墜',
    '垄': '壟',
    '垅': '壟',
    '垆': '壚',
    '垒': '壘',
    '垦': '墾',
    '垩': '堊',
    '垫': '墊',
    '垭': '埡',
    '垲': '塏',
    '垴': '堖',
    '埘': '塒',
    '埙': '壎',
    '埚': '堝',
    '堑': '塹',
    '堕': '墮',
    '墒': '墑',
    '墙': '牆',
    '壮': '壯',
    '声': '聲',
    '壳': '殼',
    '壶': '壺',
    '处': '處',
    '备': '備',
    '够': '夠',
    '头': '頭',
    '夹': '夾',
    '夺': '奪',
    '奁': '奩',
    '奂': '奐',
    '奋': '奮',
    '奖': '獎',
    '奥': '奧',
    '奬': '獎',
    '妆': '妝',
    '妇': '婦',
    '妈': '媽',
    '妩': '嫵',
    '妪': '嫗',
    '妫': '媯',
    '姗': '姍',
    '娄': '婁',
    '娅': '婭',
    '娆': '嬈',
    '娇': '嬌',
    '娈': '孌',
    '娱': '娛',
    '娲': '媧',
    '娴': '嫻',
    '婳': '嫿',
    '婴': '嬰',
    '婵': '嬋',
    '婶': '嬸',
    '媪': '媼',
    '嫒': '嬡',
    '嫔': '嬪',
    '嫱': '嬙',
    '嬷': '嬤',
    '孙': '孫',
    '学': '學',
    '孪': '孿',
    '宝': '寶',
    '实': '實',
    '宠': '寵',
    '审': '審',
    '宪': '憲',
    '宫': '宮',
    '宽': '寬',
    '宾': '賓',
    '寝': '寢',
    '对': '對',
    '寻': '尋',
    '导': '導',
    '寿': '壽',
    '将': '將',
    '尔': '爾',
    '尘': '塵',
    '尜': '嘎',
    '尝': '嘗',
    '尧': '堯',
    '尴': '尷',
    '尽': '盡',
    '层': '層',
    '屉': '屜',
    '届': '屆',
    '属': '屬',
    '屡': '屢',
    '屦': '屨',
    '屿': '嶼',
    '岁': '歲',
    '岂': '豈',
    '岖': '嶇',
    '岗': '崗',
    '岘': '峴',
    '岚': '嵐',
    '岛': '島',
    '岽': '崠',
    '岿': '巋',
    '峃': '嶨',
    '峄': '嶧',
    '峡': '峽',
    '峣': '嶢',
    '峤': '嶠',
    '峥': '崢',
    '峦': '巒',
    '峯': '峰',
    '崂': '嶗',
    '崃': '崍',
    '崐': '崑',
    '崭': '嶄',
    '嵘': '嶸',
    '嵚': '嶔',
    '嵛': '崳',
    '嵝': '嶁',
    '巅': '巔',
    '巌': '巖',
    '巩': '鞏',
    '巯': '巰',
    '币': '幣',
    '帅': '帥',
    '师': '師',
    '帏': '幃',
    '帐': '帳',
    '帜': '幟',
    '带': '帶',
    '帧': '幀',
    '帮': '幫',
    '帱': '幬',
    '帻': '幘',
    '帼': '幗',
    '幂': '冪',
    '幷': '並',
    '广': '廣',
    '庆': '慶',
    '庐': '廬',
    '庑': '廡',
    '库': '庫',
    '应': '應',
    '庙': '廟',
    '庞': '龐',
    '废': '廢',
    '庼': '廎',
    '廪': '廩',
    '开': '開',
    '弃': '棄',
    '弑': '弒',
    '张': '張',
    '弥': '彌',
    '弪': '弳',
    '弯': '彎',
    '弹': '彈',
    '强': '強',
    '归': '歸',
    '当': '當',
    '录': '錄',
    '彚': '彙',
    '彦': '彥',
    '彻': '徹',
    '径': '徑',
    '徕': '徠',
    '忆': '憶',
    '忧': '憂',
    '忾': '愾',
    '态': '態',
    '怂': '慫',
    '怃': '憮',
    '怄': '慪',
    '怅': '悵',
    '怆': '愴',
    '总': '總',
    '怼': '懟',
    '怿': '懌',
    '恋': '戀',
    '恳': '懇',
    '恶': '惡',
    '恸': '慟',
    '恹': '懨',
    '恺': '愷',
    '恻': '惻',
    '恼': '惱',
    '恽': '惲',
    '悦': '悅',
    '悫': '愨',
    '悬': '懸',
    '悭': '慳',
    '悯': '憫',
    '惧': '懼',
    '惨': '慘',
    '惩': '懲',
    '惫': '憊',
    '惬': '愜',
    '惭': '慚',
    '惮': '憚',
    '惯': '慣',
    '愠': '慍',
    '愤': '憤',
    '愦': '憒',
    '慑': '懾',
    '懑': '懣',
    '懒': '懶',
    '懔': '懍',
    '戆': '戇',
    '戋': '戔',
    '戏': '戲',
    '戗': '戧',
    '战': '戰',
    '戬': '戩',
    '户': '戶',
    '执': '執',
    '扩': '擴',
    '扪': '捫',
    '扫': '掃',
    '扬': '揚',
    '抚': '撫',
    '抛': '拋',
    '抟': '摶',
    '抠': '摳',
    '抡': '掄',
    '抢': '搶',
    '护': '護',
    '报': '報',
    '担': '擔',
    '拟': '擬',
    '拢': '攏',
    '拣': '揀',
    '拥': '擁',
    '拦': '攔',
    '拧': '擰',
    '拨': '撥',
    '择': '擇',
    '挚': '摯',
    '挛': '攣',
    '挜': '掗',
    '挝': '撾',
    '挞': '撻',
    '挟': '挾',
    '挠': '撓',
    '挡': '擋',
    '挢': '撟',
    '挣': '掙',
    '挤': '擠',
    '挥': '揮',
    '挦': '撏',
    '捜': '搜',
    '捞': '撈',
    '损': '損',
    '捡': '撿',
    '换': '換',
    '捣': '搗',
    '掳': '擄',
    '掴': '摑',
    '掷': '擲',
    '掸': '撣',
    '掺': '摻',
    '掼': '摜',
    '揽': '攬',
    '揿': '撳',
    '搀': '攙',
    '搁': '擱',
    '搂': '摟',
    '搅': '攪',
    '携': '攜',
    '摄': '攝',
    '摅': '攄',
    '摆': '擺',
    '摇': '搖',
    '摈': '擯',
    '摊': '攤',
    '撄': '攖',
    '撑': '撐',
    '撵': '攆',
    '撷': '擷',
    '撸': '擼',
    '撺': '攛',
    '擀': '搟',
    '擞': '擻',
    '攒': '攢',
    '敌': '敵',
    '敛': '斂',
    '数': '數',
    '斋': '齋',
    '斓': '斕',
    '斩': '斬',
    '断': '斷',
    '无': '無',
    '旧': '舊',
    '时': '時',
    '旷': '曠',
    '旸': '暘',
    '昙': '曇',
    '昼': '晝',
    '昽': '曨',
    '显': '顯',
    '晋': '晉',
    '晓': '曉',
    '晔': '曄',
    '晕': '暈',
    '晖': '暉',
    '暂': '暫',
    '暧': '曖',
    '术': '術',
    '杀': '殺',
    '杂': '雜',
    '权': '權',
    '条': '條',
    '来': '來',
    '杨': '楊',
    '杩': '榪',
    '枞': '樅',
    '枢': '樞',
    '枣': '棗',
    '枥': '櫪',
    '枧': '梘',
    '枨': '棖',
    '枪': '槍',
    '枫': '楓',
    '枭': '梟',
    '柠': '檸',
    '柽': '檉',
    '栀': '梔',
    '栅': '柵',
    '标': '標',
    '栈': '棧',
    '栉': '櫛',
    '栊': '櫳',
    '栋': '棟',
    '栌': '櫨',
    '栎': '櫟',
    '栏': '欄',
    '树': '樹',
    '样': '樣',
    '栾': '欒',
    '桠': '椏',
    '桡': '橈',
    '桢': '楨',
    '档': '檔',
    '桤': '榿',
    '桥': '橋',
    '桦': '樺',
    '桧': '檜',
    '桨': '槳',
    '桩': '樁',
    '梦': '夢',
    '检': '檢',
    '棂': '櫺',
    '椁': '槨',
    '椟': '櫝',
    '椠': '槧',
    '椤': '欏',
    '椭': '橢',
    '楼': '樓',
    '榄': '欖',
    '榇': '櫬',
    '榈': '櫚',
    '榉': '櫸',
    '榘': '矩',
    '槚': '檟',
    '槛': '檻',
    '槟': '檳',
    '槠': '櫧',
    '横': '橫',
    '樯': '檣',
    '樱': '櫻',
    '橥': '櫫',
    '橱': '櫥',
    '橹': '櫓',
    '橼': '櫞',
    '檩': '檁',
    '欢': '歡',
    '欤': '歟',
    '欧': '歐',
    '歼': '殲',
    '殁': '歿',
    '殇': '殤',
    '残': '殘',
    '殒': '殞',
    '殓': '殮',
    '殚': '殫',
    '殡': '殯',
    '殴': '毆',
    '毁': '毀',
    '毂': '轂',
    '毕': '畢',
    '毙': '斃',
    '毡': '氈',
    '毵': '毿',
    '氇': '氌',
    '氢': '氫',
    '氩': '氬',
    '氲': '氳',
    '氽': '汆',
    '汇': '匯',
    '汉': '漢',
    '汤': '湯',
    '汹': '洶',
    '沟': '溝',
    '没': '沒',
    '沣': '灃',
    '沤': '漚',
    '沥': '瀝',
    '沦': '淪',
    '沧': '滄',
    '沨': '渢',
    '沩': '溈',
    '沪': '滬',
    '沲': '沱',
    '泪': '淚',
    '泶': '澩',
    '泷': '瀧',
    '泸': '瀘',
    '泺': '濼',
    '泻': '瀉',
    '泼': '潑',
    '泽': '澤',
    '泾': '涇',
    '浃': '浹',
    '浅': '淺',
    '浆': '漿',
    '浇': '澆',
    '浈': '湞',
    '浉': '溮',
    '浊': '濁',
    '测': '測',
    '浍': '澮',
    '济': '濟',
    '浏': '瀏',
    '浐': '滻',
    '浑': '渾',
    '浒': '滸',
    '浓': '濃',
    '浔': '潯',
    '浕': '濜',
    '浜': '濱',
    '涛': '濤',
    '涝': '澇',
    '涞': '淶',
    '涟': '漣',
    '涠': '潿',
    '涡': '渦',
    '涢': '溳',
    '涣': '渙',
    '涤': '滌',
    '润': '潤',
    '涧': '澗',
    '涨': '漲',
    '涩': '澀',
    '渊': '淵',
    '渌': '淥',
    '渍': '漬',
    '渎': '瀆',
    '渐': '漸',
    '渑': '澠',
    '渔': '漁',
    '渖': '瀋',
    '渗': '滲',
    '温': '溫',
    '湾': '灣',
    '湿': '濕',
    '溃': '潰',
    '溅': '濺',
    '溆': '漵',
    '溇': '漊',
    '滗': '潷',
    '滚': '滾',
    '滞': '滯',
    '滟': '灩',
    '滠': '灄',
    '满': '滿',
    '滢': '瀅',
    '滤': '濾',
    '滥': '濫',
    '滦': '灤',
    '滨': '濱',
    '滩': '灘',
    '滪': '澦',
    '潆': '瀠',
    '潇': '瀟',
    '潋': '瀲',
    '潍': '濰',
    '潜': '潛',
    '潴': '瀦',
    '澜': '瀾',
    '濑': '瀨',
    '濒': '瀕',
    '灏': '灝',
    '灭': '滅',
    '灯': '燈',
    '灵': '靈',
    '灾': '災',
    '灿': '燦',
    '炀': '煬',
    '炉': '爐',
    '炜': '煒',
    '炝': '熗',
    '点': '點',
    '炼': '煉',
    '炽': '熾',
    '烁': '爍',
    '烂': '爛',
    '烃': '烴',
    '烛': '燭',
    '烟': '煙',
    '烦': '煩',
    '烧': '燒',
    '烨': '燁',
    '烩': '燴',
    '烫': '燙',
    '烬': '燼',
    '热': '熱',
    '焕': '煥',
    '焖': '燜',
    '焘': '燾',
    '煅': '鍛',
    '爱': '愛',
    '爲': '為',
    '爷': '爺',
    '牀': '床',
    '牍': '牘',
    '牦': '犛',
    '牵': '牽',
    '牺': '犧',
    '犊': '犢',
    '状': '狀',
    '犷': '獷',
    '犸': '獁',
    '犹': '猶',
    '狈': '狽',
    '狝': '獮',
    '狞': '獰',
    '独': '獨',
    '狭': '狹',
    '狮': '獅',
    '狯': '獪',
    '狰': '猙',
    '狱': '獄',
    '狲': '猻',
    '猃': '獫',
    '猎': '獵',
    '猕': '獼',
    '猡': '玀',
    '猪': '豬',
    '猫': '貓',
    '猬': '蝟',
    '献': '獻',
    '獭': '獺',
    '玑': '璣',
    '玛': '瑪',
    '玮': '瑋',
    '环': '環',
    '现': '現',
    '玱': '瑲',
    '玺': '璽',
    '珉': '玟',
    '珏': '玨',
    '珐': '琺',
    '珑': '瓏',
    '珲': '琿',
    '琎': '璡',
    '琏': '璉',
    '琐': '瑣',
    '琼': '瓊',
    '瑶': '瑤',
    '瑷': '璦',
    '璎': '瓔',
    '瓒': '瓚',
    '瓯': '甌',
    '産': '產',
    '电': '電',
    '画': '畫',
    '畅': '暢',
    '畲': '畬',
    '畴': '疇',
    '疖': '癤',
    '疗': '療',
    '疟': '瘧',
    '疠': '癘',
    '疡': '瘍',
    '疬': '癧',
    '疮': '瘡',
    '疯': '瘋',
    '疱': '皰',
    '疴': '痾',
    '痈': '癰',
    '痉': '痙',
    '痖': '瘂',
    '痨': '癆',
    '痪': '瘓',
    '痫': '癇',
    '瘅': '癉',
    '瘗': '瘞',
    '瘘': '瘻',
    '瘪': '癟',
    '瘫': '癱',
    '瘾': '癮',
    '瘿': '癭',
    '癞': '癩',
    '癣': '癬',
    '癫': '癲',
    '皑': '皚',
    '皱': '皺',
    '皲': '皸',
    '盏': '盞',
    '盐': '鹽',
    '监': '監',
    '盖': '蓋',
    '盗': '盜',
    '盘': '盤',
    '眍': '瞘',
    '眎': '視',
    '眦': '眥',
    '眬': '矓',
    '着': '著',
    '睁': '睜',
    '睐': '睞',
    '睑': '瞼',
    '瞒': '瞞',
    '瞩': '矚',
    '矫': '矯',
    '矶': '磯',
    '矾': '礬',
    '矿': '礦',
    '砀': '碭',
    '码': '碼',
    '砖': '磚',
    '砗': '硨',
    '砚': '硯',
    '砜': '碸',
    '砺': '礪',
    '砻': '礱',
    '砾': '礫',
    '础': '礎',
    '硕': '碩',
    '硖': '硤',
    '硗': '磽',
    '硙': '磑',
    '硚': '礄',
    '硷': '鹼',
    '碍': '礙',
    '碛': '磧',
    '碜': '磣',
    '碱': '鹼',
    '礼': '禮',
    '祎': '禕',
    '祯': '禎',
    '祷': '禱',
    '祸': '禍',
    '禀': '稟',
    '禄': '祿',
    '禅': '禪',
    '秃': '禿',
    '秆': '稈',
    '积': '積',
    '称': '稱',
    '秽': '穢',
    '税': '稅',
    '稣': '穌',
    '稭': '秸',
    '稳': '穩',
    '穑': '穡',
    '穷': '窮',
    '窃': '竊',
    '窍': '竅',
    '窎': '窵',
    '窑': '窯',
    '窜': '竄',
    '窝': '窩',
    '窥': '窺',
    '窦': '竇',
    '窭': '窶',
    '竖': '豎',
    '竞': '競',
    '笃': '篤',
    '笋': '筍',
    '笔': '筆',
    '笕': '筧',
    '笺': '箋',
    '笼': '籠',
    '笾': '籩',
    '筚': '篳',
    '筛': '篩',
    '筝': '箏',
    '筹': '籌',
    '签': '簽',
    '简': '簡',
    '箓': '籙',
    '箦': '簀',
    '箧': '篋',
    '箨': '籜',
    '箩': '籮',
    '箪': '簞',
    '箫': '簫',
    '篑': '簣',
    '篓': '簍',
    '篮': '籃',
    '簖': '籪',
    '籁': '籟',
    '籴': '糴',
    '类': '類',
    '籼': '秈',
    '粜': '糶',
    '粝': '糲',
    '粤': '粵',
    '粪': '糞',
    '粮': '糧',
    '糁': '糝',
    '糇': '餱',
    '糍': '餈',
    '紥': '紮',
    '紧': '緊',
    '絷': '縶',
    '綫': '線',
    '纠': '糾',
    '纡': '紆',
    '红': '紅',
    '纣': '紂',
    '纤': '纖',
    '纥': '紇',
    '约': '約',
    '级': '級',
    '纨': '紈',
    '纩': '纊',
    '纪': '紀',
    '纫': '紉',
    '纬': '緯',
    '纭': '紜',
    '纮': '紘',
    '纯': '純',
    '纰': '紕',
    '纱': '紗',
    '纲': '綱',
    '纳': '納',
    '纴': '紝',
    '纵': '縱',
    '纶': '綸',
    '纷': '紛',
    '纸': '紙',
    '纹': '紋',
    '纺': '紡',
    '纼': '紖',
    '纽': '紐',
    '纾': '紓',
    '线': '線',
    '绀': '紺',
    '绁': '紲',
    '绂': '紱',
    '练': '練',
    '组': '組',
    '绅': '紳',
    '细': '細',
    '织': '織',
    '终': '終',
    '绉': '縐',
    '绊': '絆',
    '绋': '紼',
    '绌': '絀',
    '绍': '紹',
    '绎': '繹',
    '经': '經',
    '绐': '紿',
    '绑': '綁',
    '绒': '絨',
    '结': '結',
    '绔': '絝',
    '绕': '繞',
    '绖': '絰',
    '绗': '絎',
    '绘': '繪',
    '给': '給',
    '绚': '絢',
    '绛': '絳',
    '络': '絡',
    '绝': '絕',
    '绞': '絞',
    '统': '統',
    '绠': '綆',
    '绡': '綃',
    '绢': '絹',
    '绣': '繡',
    '绥': '綏',
    '绦': '絛',
    '继': '繼',
    '绨': '綈',
    '绩': '績',
    '绪': '緒',
    '绫': '綾',
    '续': '續',
    '绮': '綺',
    '绯': '緋',
    '绰': '綽',
    '绱': '緔',
    '绲': '緄',
    '绳': '繩',
    '维': '維',
    '绵': '綿',
    '绶': '綬',
    '绷': '繃',
    '绸': '綢',
    '绺': '綹',
    '绻': '綣',
    '综': '綜',
    '绽': '綻',
    '绾': '綰',
    '绿': '綠',
    '缀': '綴',
    '缁': '緇',
    '缂': '緙',
    '缃': '緗',
    '缄': '緘',
    '缅': '緬',
    '缆': '纜',
    '缇': '緹',
    '缈': '緲',
    '缉': '緝',
    '缊': '縕',
    '缋': '繢',
    '缌': '緦',
    '缍': '綞',
    '缎': '緞',
    '缏': '緶',
    '缑': '緱',
    '缒': '縋',
    '缓': '緩',
    '缔': '締',
    '缕': '縷',
    '编': '編',
    '缗': '緡',
    '缘': '緣',
    '缙': '縉',
    '缚': '縛',
    '缛': '縟',
    '缜': '縝',
    '缝': '縫',
    '缞': '縗',
    '缟': '縞',
    '缠': '纏',
    '缡': '縭',
    '缢': '縊',
    '缣': '縑',
    '缤': '繽',
    '缥': '縹',
    '缦': '縵',
    '缧': '縲',
    '缨': '纓',
    '缩': '縮',
    '缪': '繆',
    '缫': '繅',
    '缬': '纈',
    '缭': '繚',
    '缮': '繕',
    '缯': '繒',
    '缰': '韁',
    '缱': '繾',
    '缲': '繰',
    '缳': '繯',
    '缴': '繳',
    '缵': '纘',
    '罂': '罌',
    '罎': '罈',
    '罗': '羅',
    '罚': '罰',
    '罢': '罷',
    '罴': '羆',
    '羁': '羈',
    '羟': '羥',
    '翘': '翹',
    '翚': '翬',
    '耢': '耮',
    '耧': '耬',
    '耸': '聳',
    '耻': '恥',
    '聂': '聶',
    '聋': '聾',
    '职': '職',
    '聍': '聹',
    '联': '聯',
    '聩': '聵',
    '聪': '聰',
    '肀': '聿',
    '肃': '肅',
    '肠': '腸',
    '肤': '膚',
    '肾': '腎',
    '肿': '腫',
    '胀': '脹',
    '胁': '脅',
    '胆': '膽',
    '胧': '朧',
    '胨': '腖',
    '胪': '臚',
    '胫': '脛',
    '胶': '膠',
    '脉': '脈',
    '脍': '膾',
    '脏': '髒',
    '脐': '臍',
    '脑': '腦',
    '脓': '膿',
    '脔': '臠',
    '脚': '腳',
    '脱': '脫',
    '脶': '腡',
    '脸': '臉',
    '腘': '膕',
    '腭': '顎',
    '腻': '膩',
    '腼': '靦',
    '腽': '膃',
    '腾': '騰',
    '膑': '臏',
    '臜': '臢',
    '舆': '輿',
    '舣': '艤',
    '舰': '艦',
    '舱': '艙',
    '舻': '艫',
    '艰': '艱',
    '艳': '豔',
    '艺': '藝',
    '节': '節',
    '芈': '羋',
    '芗': '薌',
    '芜': '蕪',
    '芦': '蘆',
    '苁': '蓯',
    '苇': '葦',
    '苈': '藶',
    '苋': '莧',
    '苌': '萇',
    '苍': '蒼',
    '苎': '苧',
    '苏': '蘇',
    '茎': '莖',
    '茏': '蘢',
    '茑': '蔦',
    '茔': '塋',
    '茕': '煢',
    '荆': '荊',
    '荚': '莢',
    '荛': '蕘',
    '荜': '蓽',
    '荞': '蕎',
    '荟': '薈',
    '荠': '薺',
    '荡': '蕩',
    '荣': '榮',
    '荤': '葷',
    '荥': '滎',
    '荦': '犖',
    '荧': '熒',
    '荨': '蕁',
    '荩': '藎',
    '荪': '蓀',
    '荫': '蔭',
    '荬': '蕒',
    '荭': '葒',
    '荮': '葤',
    '药': '藥',
    '莅': '蒞',
    '莱': '萊',
    '莲': '蓮',
    '莳': '蒔',
    '莴': '萵',
    '莶': '薟',
    '获': '獲',
    '莸': '蕕',
    '莹': '瑩',
    '莺': '鶯',
    '莼': '蓴',
    '萚': '蘀',
    '萝': '蘿',
    '萤': '螢',
    '营': '營',
    '萦': '縈',
    '萧': '蕭',
    '萨': '薩',
    '葱': '蔥',
    '蒇': '蕆',
    '蒉': '蕢',
    '蒋': '蔣',
    '蒌': '蔞',
    '蓝': '藍',
    '蓟': '薊',
    '蓠': '蘺',
    '蓣': '蕷',
    '蓥': '鎣',
    '蓦': '驀',
    '蔴': '麻',
    '蔷': '薔',
    '蔹': '蘞',
    '蔺': '藺',
    '蔼': '藹',
    '蕲': '蘄',
    '蕴': '蘊',
    '薮': '藪',
    '藓': '蘚',
    '蘖': '蘗',
    '虏': '虜',
    '虑': '慮',
    '虚': '虛',
    '虬': '虯',
    '虽': '雖',
    '虾': '蝦',
    '虿': '蠆',
    '蚀': '蝕',
    '蚁': '蟻',
    '蚂': '螞',
    '蚬': '蜆',
    '蛊': '蠱',
    '蛎': '蠣',
    '蛏': '蟶',
    '蛮': '蠻',
    '蛰': '蟄',
    '蛱': '蛺',
    '蛲': '蟯',
    '蛳': '螄',
    '蛴': '蠐',
    '蜕': '蛻',
    '蜗': '蝸',
    '蝇': '蠅',
    '蝈': '蟈',
    '蝉': '蟬',
    '蝰': '虺',
    '蝼': '螻',
    '蝾': '蠑',
    '螨': '蟎',
    '蟏': '蠨',
    '蟮': '蟺',
    '衅': '釁',
    '衆': '眾',
    '衔': '銜',
    '补': '補',
    '衬': '襯',
    '衮': '袞',
    '袄': '襖',
    '袅': '裊',
    '袜': '襪',
    '袭': '襲',
    '装': '裝',
    '裆': '襠',
    '裢': '褳',
    '裣': '襝',
    '裤': '褲',
    '裥': '襉',
    '褛': '褸',
    '褴': '襤',
    '见': '見',
    '观': '觀',
    '觃': '覎',
    '规': '規',
    '觅': '覓',
    '视': '視',
    '觇': '覘',
    '览': '覽',
    '觉': '覺',
    '觊': '覬',
    '觋': '覡',
    '觌': '覿',
    '觎': '覦',
    '觏': '覯',
    '觐': '覲',
    '觑': '覷',
    '觞': '觴',
    '觯': '觶',
    '誉': '譽',
    '誊': '謄',
    '计': '計',
    '订': '訂',
    '讣': '訃',
    '认': '認',
    '讥': '譏',
    '讦': '訐',
    '讧': '訌',
    '讨': '討',
    '让': '讓',
    '讪': '訕',
    '讫': '訖',
    '训': '訓',
    '议': '議',
    '讯': '訊',
    '记': '記',
    '讲': '講',
    '讳': '諱',
    '讴': '謳',
    '讵': '詎',
    '讶': '訝',
    '讷': '訥',
    '许': '許',
    '讹': '訛',
    '论': '論',
    '讻': '訩',
    '讼': '訟',
    '讽': '諷',
    '设': '設',
    '访': '訪',
    '诀': '訣',
    '证': '證',
    '诂': '詁',
    '诃': '訶',
    '评': '評',
    '诅': '詛',
    '识': '識',
    '诇': '詗',
    '诈': '詐',
    '诉': '訴',
    '诊': '診',
    '诋': '詆',
    '诌': '謅',
    '词': '詞',
    '诎': '詘',
    '诏': '詔',
    '译': '譯',
    '诒': '詒',
    '诓': '誆',
    '诔': '誄',
    '试': '試',
    '诖': '詿',
    '诗': '詩',
    '诘': '詰',
    '诙': '詼',
    '诚': '誠',
    '诛': '誅',
    '诜': '詵',
    '话': '話',
    '诞': '誕',
    '诟': '詬',
    '诠': '詮',
    '诡': '詭',
    '询': '詢',
    '诣': '詣',
    '诤': '諍',
    '该': '該',
    '详': '詳',
    '诧': '詫',
    '诨': '諢',
    '诩': '詡',
    '诫': '誡',
    '诬': '誣',
    '语': '語',
    '诮': '誚',
    '误': '誤',
    '诰': '誥',
    '诱': '誘',
    '诲': '誨',
    '诳': '誑',
    '说': '說',
    '诵': '誦',
    '诶': '誒',
    '请': '請',
    '诸': '諸',
    '诹': '諏',
    '诺': '諾',
    '读': '讀',
    '诼': '諑',
    '诽': '誹',
    '课': '課',
    '诿': '諉',
    '谀': '諛',
    '谁': '誰',
    '谂': '諗',
    '调': '調',
    '谄': '諂',
    '谅': '諒',
    '谆': '諄',
    '谇': '誶',
    '谈': '談',
    '谉': '讅',
    '谊': '誼',
    '谋': '謀',
    '谌': '諶',
    '谍': '諜',
    '谎': '謊',
    '谏': '諫',
    '谐': '諧',
    '谑': '謔',
    '谒': '謁',
    '谓': '謂',
    '谔': '諤',
    '谕': '諭',
    '谖': '諼',
    '谗': '讒',
    '谘': '諮',
    '谙': '諳',
    '谚': '諺',
    '谛': '諦',
    '谜': '謎',
    '谝': '諞',
    '谞': '諝',
    '谟': '謨',
    '谠': '讜',
    '谡': '謖',
    '谢': '謝',
    '谣': '謠',
    '谤': '謗',
    '谥': '謚',
    '谦': '謙',
    '谧': '謐',
    '谨': '謹',
    '谩': '謾',
    '谪': '謫',
    '谫': '譾',
    '谬': '謬',
    '谭': '譚',
    '谮': '譖',
    '谯': '譙',
    '谰': '讕',
    '谱': '譜',
    '谲': '譎',
    '谳': '讞',
    '谴': '譴',
    '谵': '譫',
    '谶': '讖',
    '豮': '豶',
    '贜': '贓',
    '贝': '貝',
    '贞': '貞',
    '负': '負',
    '贡': '貢',
    '财': '財',
    '责': '責',
    '贤': '賢',
    '败': '敗',
    '账': '賬',
    '货': '貨',
    '质': '質',
    '贩': '販',
    '贪': '貪',
    '贫': '貧',
    '贬': '貶',
    '购': '購',
    '贮': '貯',
    '贯': '貫',
    '贰': '貳',
    '贱': '賤',
    '贲': '賁',
    '贳': '貰',
    '贴': '貼',
    '贵': '貴',
    '贶': '貺',
    '贷': '貸',
    '贸': '貿',
    '费': '費',
    '贺': '賀',
    '贻': '貽',
    '贼': '賊',
    '贽': '贄',
    '贾': '賈',
    '贿': '賄',
    '赀': '貲',
    '赁': '賃',
    '赂': '賂',
    '赃': '贓',
    '资': '資',
    '赅': '賅',
    '赆': '贐',
    '赇': '賕',
    '赈': '賑',
    '赉': '賚',
    '赊': '賒',
    '赋': '賦',
    '赌': '賭',
    '赍': '齎',
    '赎': '贖',
    '赏': '賞',
    '赐': '賜',
    '赒': '賙',
    '赓': '賡',
    '赔': '賠',
    '赕': '賧',
    '赖': '賴',
    '赗': '賵',
    '赘': '贅',
    '赙': '賻',
    '赚': '賺',
    '赛': '賽',
    '赜': '賾',
    '赝': '贋',
    '赞': '贊',
    '赟': '贇',
    '赠': '贈',
    '赡': '贍',
    '赢': '贏',
    '赣': '贛',
    '赵': '趙',
    '趋': '趨',
    '趱': '趲',
    '趸': '躉',
    '跃': '躍',
    '跄': '蹌',
    '跞': '躒',
    '践': '踐',
    '跷': '蹺',
    '跸': '蹕',
    '跹': '躚',
    '跻': '躋',
    '踌': '躊',
    '踪': '蹤',
    '踬': '躓',
    '踯': '躑',
    '蹑': '躡',
    '蹒': '蹣',
    '蹰': '躕',
    '蹿': '躥',
    '躏': '躪',
    '躜': '躦',
    '躯': '軀',
    '躰': '體',
    '车': '車',
    '轧': '軋',
    '轨': '軌',
    '轩': '軒',
    '轫': '軔',
    '转': '轉',
    '轭': '軛',
    '轮': '輪',
    '软': '軟',
    '轰': '轟',
    '轱': '軲',
    '轲': '軻',
    '轳': '轤',
    '轴': '軸',
    '轵': '軹',
    '轶': '軼',
    '轷': '軤',
    '轸': '軫',
    '轹': '轢',
    '轺': '軺',
    '轻': '輕',
    '轼': '軾',
    '载': '載',
    '轾': '輊',
    '轿': '轎',
    '辁': '輇',
    '辂': '輅',
    '较': '較',
    '辄': '輒',
    '辅': '輔',
    '辆': '輛',
    '辇': '輦',
    '辈': '輩',
    '辉': '輝',
    '辊': '輥',
    '辋': '輞',
    '辍': '輟',
    '辎': '輜',
    '辏': '輳',
    '辐': '輻',
    '辑': '輯',
    '输': '輸',
    '辔': '轡',
    '辕': '轅',
    '辖': '轄',
    '辗': '輾',
    '辘': '轆',
    '辙': '轍',
    '辚': '轔',
    '辞': '辭',
    '辩': '辯',
    '辫': '辮',
    '边': '邊',
    '辽': '遼',
    '达': '達',
    '迁': '遷',
    '过': '過',
    '迈': '邁',
    '运': '運',
    '还': '還',
    '这': '這',
    '进': '進',
    '远': '遠',
    '违': '違',
    '连': '連',
    '迟': '遲',
    '迩': '邇',
    '迳': '逕',
    '迹': '跡',
    '选': '選',
    '逊': '遜',
    '递': '遞',
    '逦': '邐',
    '逻': '邏',
    '遗': '遺',
    '遥': '遙',
    '邓': '鄧',
    '邝': '鄺',
    '邬': '鄔',
    '邮': '郵',
    '邹': '鄒',
    '邺': '鄴',
    '邻': '鄰',
    '郄': '隙',
    '郏': '郟',
    '郐': '鄶',
    '郑': '鄭',
    '郓': '鄆',
    '郦': '酈',
    '郧': '鄖',
    '郸': '鄲',
    '酝': '醞',
    '酱': '醬',
    '酽': '釅',
    '酾': '釃',
    '酿': '釀',
    '醖': '醞',
    '释': '釋',
    '鈈': '鈽',
    '鈡': '鐘',
    '鉴': '鑑',
    '銮': '鑾',
    '録': '錄',
    '錾': '鏨',
    '钆': '釓',
    '钇': '釔',
    '针': '針',
    '钉': '釘',
    '钊': '釗',
    '钋': '釙',
    '钌': '釕',
    '钍': '釷',
    '钎': '釺',
    '钏': '釧',
    '钐': '釤',
    '钒': '釩',
    '钓': '釣',
    '钔': '鍆',
    '钕': '釹',
    '钖': '鍚',
    '钗': '釵',
    '钘': '鈃',
    '钙': '鈣',
    '钚': '鈈',
    '钛': '鈦',
    '钜': '鉅',
    '钝': '鈍',
    '钞': '鈔',
    '钟': '鐘',
    '钠': '鈉',
    '钡': '鋇',
    '钢': '鋼',
    '钣': '鈑',
    '钤': '鈐',
    '钥': '鑰',
    '钦': '欽',
    '钧': '鈞',
    '钨': '鎢',
    '钩': '鉤',
    '钪': '鈧',
    '钫': '鈁',
    '钬': '鈥',
    '钭': '鈄',
    '钮': '鈕',
    '钯': '鈀',
    '钰': '鈺',
    '钱': '錢',
    '钲': '鉦',
    '钳': '鉗',
    '钴': '鈷',
    '钵': '缽',
    '钶': '鈳',
    '钷': '鉕',
    '钸': '鈽',
    '钹': '鈸',
    '钺': '鉞',
    '钻': '鑽',
    '钼': '鉬',
    '钽': '鉭',
    '钾': '鉀',
    '钿': '鈿',
    '铀': '鈾',
    '铁': '鐵',
    '铂': '鉑',
    '铃': '鈴',
    '铄': '鑠',
    '铅': '鉛',
    '铆': '鉚',
    '铈': '鈰',
    '铉': '鉉',
    '铊': '鉈',
    '铋': '鉍',
    '铌': '鈮',
    '铍': '鈹',
    '铎': '鐸',
    '铏': '鉶',
    '铐': '銬',
    '铑': '銠',
    '铒': '鉺',
    '铓': '鋩',
    '铕': '銪',
    '铖': '鋮',
    '铗': '鋏',
    '铘': '鋣',
    '铙': '鐃',
    '铛': '鐺',
    '铜': '銅',
    '铝': '鋁',
    '铞': '銱',
    '铟': '銦',
    '铠': '鎧',
    '铡': '鍘',
    '铢': '銖',
    '铣': '銑',
    '铤': '鋌',
    '铥': '銩',
    '铧': '鏵',
    '铨': '銓',
    '铩': '鎩',
    '铪': '鉿',
    '铫': '銚',
    '铬': '鉻',
    '铭': '銘',
    '铮': '錚',
    '铯': '銫',
    '铰': '鉸',
    '铱': '銥',
    '铲': '鏟',
    '铳': '銃',
    '铴': '鐋',
    '铵': '銨',
    '银': '銀',
    '铷': '銣',
    '铸': '鑄',
    '铹': '鐒',
    '铺': '鋪',
    '铼': '錸',
    '铽': '鋱',
    '链': '鏈',
    '铿': '鏗',
    '销': '銷',
    '锁': '鎖',
    '锂': '鋰',
    '锃': '鋥',
    '锄': '鋤',
    '锅': '鍋',
    '锆': '鋯',
    '锇': '鋨',
    '锈': '鏽',
    '锉': '銼',
    '锊': '鋝',
    '锋': '鋒',
    '锌': '鋅',
    '锍': '鋶',
    '锎': '鐦',
    '锏': '鐧',
    '锐': '銳',
    '锑': '銻',
    '锒': '鋃',
    '锓': '鋟',
    '锔': '鋦',
    '锕': '錒',
    '锖': '錆',
    '锗': '鍺',
    '锘': '鍩',
    '错': '錯',
    '锚': '錨',
    '锛': '錛',
    '锜': '錡',
    '锝': '鍀',
    '锞': '錁',
    '锟': '錕',
    '锡': '錫',
    '锢': '錮',
    '锣': '鑼',
    '锤': '錘',
    '锥': '錐',
    '锦': '錦',
    '锧': '鑕',
    '锨': '鍁',
    '锩': '錈',
    '锪': '鍃',
    '锫': '錇',
    '锬': '錟',
    '锭': '錠',
    '键': '鍵',
    '锯': '鋸',
    '锰': '錳',
    '锱': '錙',
    '锲': '鍥',
    '锴': '鍇',
    '锵': '鏘',
    '锶': '鍶',
    '锷': '鍔',
    '锸': '鍤',
    '锹': '鍬',
    '锺': '鍾',
    '锻': '鍛',
    '锼': '鎪',
    '锾': '鍰',
    '锿': '鎄',
    '镀': '鍍',
    '镁': '鎂',
    '镂': '鏤',
    '镃': '鎡',
    '镄': '鐨',
    '镅': '鎇',
    '镆': '鏌',
    '镇': '鎮',
    '镉': '鎘',
    '镊': '鑷',
    '镋': '钂',
    '镌': '鐫',
    '镍': '鎳',
    '镎': '鎿',
    '镏': '鎦',
    '镐': '鎬',
    '镑': '鎊',
    '镒': '鎰',
    '镓': '鎵',
    '镔': '鑌',
    '镕': '鎔',
    '镖': '鏢',
    '镗': '鏜',
    '镘': '鏝',
    '镙': '鏍',
    '镚': '鏰',
    '镛': '鏞',
    '镜': '鏡',
    '镝': '鏑',
    '镞': '鏃',
    '镟': '鏇',
    '镡': '鐔',
    '镢': '鐝',
    '镣': '鐐',
    '镤': '鏷',
    '镥': '鑥',
    '镦': '鐓',
    '镧': '鑭',
    '镨': '鐠',
    '镩': '鑹',
    '镪': '鏹',
    '镫': '鐙',
    '镬': '鑊',
    '镭': '鐳',
    '镮': '鐶',
    '镯': '鐲',
    '镰': '鐮',
    '镱': '鐿',
    '镲': '鑔',
    '镳': '鑣',
    '镴': '鑞',
    '镶': '鑲',
    '长': '長',
    '閧': '鬨',
    '门': '門',
    '闩': '閂',
    '闪': '閃',
    '闫': '閆',
    '闭': '閉',
    '问': '問',
    '闯': '闖',
    '闰': '閏',
    '闱': '闈',
    '闲': '閒',
    '闳': '閎',
    '间': '間',
    '闵': '閔',
    '闶': '閌',
    '闷': '悶',
    '闸': '閘',
    '闹': '鬧',
    '闺': '閨',
    '闻': '聞',
    '闼': '闥',
    '闽': '閩',
    '闾': '閭',
    '闿': '闓',
    '阀': '閥',
    '阁': '閣',
    '阂': '閡',
    '阃': '閫',
    '阄': '鬮',
    '阅': '閱',
    '阆': '閬',
    '阈': '閾',
    '阉': '閹',
    '阊': '閶',
    '阋': '鬩',
    '阌': '閿',
    '阍': '閽',
    '阎': '閻',
    '阏': '閼',
    '阐': '闡',
    '阑': '闌',
    '阒': '闃',
    '阔': '闊',
    '阕': '闋',
    '阖': '闔',
    '阗': '闐',
    '阙': '闕',
    '阚': '闞',
    '队': '隊',
    '阳': '陽',
    '阴': '陰',
    '阵': '陣',
    '阶': '階',
    '际': '際',
    '陆': '陸',
    '陇': '隴',
    '陈': '陳',
    '陉': '陘',
    '陕': '陝',
    '陧': '隉',
    '陨': '隕',
    '险': '險',
    '随': '隨',
    '隐': '隱',
    '隶': '隸',
    '隽': '雋',
    '难': '難',
    '雏': '雛',
    '雠': '讎',
    '雳': '靂',
    '雾': '霧',
    '霁': '霽',
    '霭': '靄',
    '靓': '靚',
    '静': '靜',
    '靣': '面',
    '靥': '靨',
    '鞑': '韃',
    '鞒': '橇',
    '鞯': '韉',
    '韦': '韋',
    '韧': '韌',
    '韨': '韍',
    '韩': '韓',
    '韪': '韙',
    '韫': '韞',
    '韬': '韜',
    '韵': '韻',
    '页': '頁',
    '顶': '頂',
    '顷': '頃',
    '顸': '頇',
    '项': '項',
    '顺': '順',
    '须': '須',
    '顼': '頊',
    '顽': '頑',
    '顾': '顧',
    '顿': '頓',
    '颀': '頎',
    '颁': '頒',
    '颂': '頌',
    '颃': '頏',
    '预': '預',
    '颅': '顱',
    '领': '領',
    '颇': '頗',
    '颈': '頸',
    '颉': '頡',
    '颊': '頰',
    '颋': '頲',
    '颌': '頜',
    '颍': '潁',
    '颏': '頦',
    '颐': '頤',
    '频': '頻',
    '颓': '頹',
    '颔': '頷',
    '颖': '穎',
    '颗': '顆',
    '题': '題',
    '颙': '顒',
    '颚': '顎',
    '颛': '顓',
    '颜': '顏',
    '额': '額',
    '颞': '顳',
    '颟': '顢',
    '颠': '顛',
    '颡': '顙',
    '颢': '顥',
    '颤': '顫',
    '颥': '顬',
    '颦': '顰',
    '颧': '顴',
    '风': '風',
    '飑': '颮',
    '飒': '颯',
    '飓': '颶',
    '飔': '颸',
    '飕': '颼',
    '飗': '飀',
    '飘': '飄',
    '飙': '飆',
    '飚': '飈',
    '飞': '飛',
    '飨': '饗',
    '餍': '饜',
    '饥': '飢',
    '饦': '飥',
    '饧': '餳',
    '饨': '飩',
    '饩': '餼',
    '饪': '飪',
    '饫': '飫',
    '饬': '飭',
    '饭': '飯',
    '饮': '飲',
    '饯': '餞',
    '饰': '飾',
    '饱': '飽',
    '饲': '飼',
    '饳': '飿',
    '饴': '飴',
    '饵': '餌',
    '饶': '饒',
    '饷': '餉',
    '饸': '餄',
    '饹': '餎',
    '饺': '餃',
    '饻': '餏',
    '饼': '餅',
    '饽': '餑',
    '饿': '餓',
    '馀': '餘',
    '馁': '餒',
    '馃': '餜',
    '馄': '餛',
    '馅': '餡',
    '馆': '館',
    '馇': '餷',
    '馈': '饋',
    '馉': '餶',
    '馊': '餿',
    '馋': '饞',
    '馍': '饃',
    '馎': '餺',
    '馏': '餾',
    '馐': '饈',
    '馑': '饉',
    '馒': '饅',
    '馓': '饊',
    '馔': '饌',
    '馕': '饟',
    '马': '馬',
    '驭': '馭',
    '驮': '馱',
    '驯': '馴',
    '驰': '馳',
    '驱': '驅',
    '驳': '駁',
    '驴': '驢',
    '驵': '駔',
    '驶': '駛',
    '驷': '駟',
    '驸': '駙',
    '驹': '駒',
    '驺': '騶',
    '驻': '駐',
    '驼': '駝',
    '驽': '駑',
    '驾': '駕',
    '驿': '驛',
    '骀': '駘',
    '骁': '驍',
    '骂': '罵',
    '骄': '驕',
    '骅': '驊',
    '骆': '駱',
    '骇': '駭',
    '骈': '駢',
    '骊': '驪',
    '骋': '騁',
    '验': '驗',
    '骎': '駸',
    '骏': '駿',
    '骐': '騏',
    '骑': '騎',
    '骒': '騍',
    '骓': '騅',
    '骖': '驂',
    '骗': '騙',
    '骘': '騭',
    '骚': '騷',
    '骛': '騖',
    '骜': '驁',
    '骝': '騮',
    '骞': '騫',
    '骟': '騸',
    '骠': '驃',
    '骡': '騾',
    '骢': '驄',
    '骣': '驏',
    '骤': '驟',
    '骥': '驥',
    '骧': '驤',
    '髅': '髏',
    '髋': '髖',
    '髌': '髕',
    '鬓': '鬢',
    '魇': '魘',
    '魉': '魎',
    '鱼': '魚',
    '鱽': '魛',
    '鱿': '魷',
    '鲁': '魯',
    '鲂': '魴',
    '鲅': '鮁',
    '鲆': '鮃',
    '鲇': '鯰',
    '鲈': '鱸',
    '鲊': '鮓',
    '鲋': '鮒',
    '鲍': '鮑',
    '鲎': '鱟',
    '鲏': '鮍',
    '鲐': '鮐',
    '鲑': '鮭',
    '鲒': '鮚',
    '鲔': '鮪',
    '鲕': '鮞',
    '鲖': '鮦',
    '鲗': '鰂',
    '鲙': '鱠',
    '鲚': '鱭',
    '鲛': '鮫',
    '鲜': '鮮',
    '鲝': '鮺',
    '鲞': '鯗',
    '鲟': '鱘',
    '鲠': '鯁',
    '鲡': '鱺',
    '鲢': '鰱',
    '鲣': '鰹',
    '鲤': '鯉',
    '鲥': '鰣',
    '鲦': '鰷',
    '鲧': '鯀',
    '鲨': '鯊',
    '鲩': '鯇',
    '鲫': '鯽',
    '鲭': '鯖',
    '鲮': '鯪',
    '鲰': '鯫',
    '鲱': '鯡',
    '鲲': '鯤',
    '鲳': '鯧',
    '鲴': '鯝',
    '鲵': '鯢',
    '鲶': '鯰',
    '鲷': '鯛',
    '鲸': '鯨',
    '鲺': '鯴',
    '鲻': '鯔',
    '鲼': '鱝',
    '鲽': '鰈',
    '鲿': '鱨',
    '鳁': '鰛',
    '鳃': '鰓',
    '鳄': '鱷',
    '鳅': '鰍',
    '鳆': '鰒',
    '鳇': '鰉',
    '鳊': '鯿',
    '鳋': '鰠',
    '鳌': '鰲',
    '鳍': '鰭',
    '鳎': '鰨',
    '鳏': '鰥',
    '鳐': '鰩',
    '鳑': '鰟',
    '鳒': '鰜',
    '鳓': '鰳',
    '鳔': '鰾',
    '鳕': '鱈',
    '鳖': '鱉',
    '鳗': '鰻',
    '鳘': '鰵',
    '鳙': '鱅',
    '鳛': '鰼',
    '鳜': '鱖',
    '鳝': '鱔',
    '鳞': '鱗',
    '鳟': '鱒',
    '鳢': '鱧',
    '鳣': '鱣',
    '鶏': '雞',
    '鷄': '雞',
    '鸟': '鳥',
    '鸠': '鳩',
    '鸡': '雞',
    '鸢': '鳶',
    '鸣': '鳴',
    '鸥': '鷗',
    '鸦': '鴉',
    '鸧': '鶬',
    '鸨': '鴇',
    '鸩': '鴆',
    '鸪': '鴣',
    '鸫': '鶇',
    '鸬': '鸕',
    '鸭': '鴨',
    '鸮': '鴞',
    '鸯': '鴦',
    '鸰': '鴒',
    '鸱': '鴟',
    '鸲': '鴝',
    '鸳': '鴛',
    '鸵': '鴕',
    '鸶': '鷥',
    '鸷': '鷙',
    '鸸': '鴯',
    '鸹': '鴰',
    '鸺': '鵂',
    '鸻': '鴴',
    '鸼': '鵃',
    '鸽': '鴿',
    '鸾': '鸞',
    '鸿': '鴻',
    '鹁': '鵓',
    '鹂': '鸝',
    '鹃': '鵑',
    '鹄': '鵠',
    '鹅': '鵝',
    '鹆': '鵒',
    '鹇': '鷴',
    '鹈': '鵜',
    '鹉': '鵡',
    '鹊': '鵲',
    '鹋': '鶓',
    '鹌': '鵪',
    '鹎': '鵯',
    '鹏': '鵬',
    '鹐': '鵮',
    '鹑': '鶉',
    '鹒': '鶊',
    '鹕': '鶘',
    '鹖': '鶡',
    '鹗': '鶚',
    '鹘': '鶻',
    '鹙': '鶖',
    '鹚': '鶿',
    '鹛': '鶥',
    '鹜': '鶩',
    '鹞': '鷂',
    '鹡': '鶺',
    '鹣': '鶼',
    '鹤': '鶴',
    '鹥': '鷖',
    '鹦': '鸚',
    '鹧': '鷓',
    '鹨': '鷚',
    '鹩': '鷯',
    '鹪': '鷦',
    '鹫': '鷲',
    '鹬': '鷸',
    '鹭': '鷺',
    '鹯': '鸇',
    '鹰': '鷹',
    '鹱': '鸌',
    '鹳': '鸛',
    '鹾': '鹺',
    '麦': '麥',
    '麸': '麩',
    '麽': '麼',
    '黄': '黃',
    '黉': '黌',
    '黡': '黶',
    '黩': '黷',
    '黪': '黲',
    '黾': '黽',
    '鼋': '黿',
    '鼍': '鼉',
    '鼹': '鼴',
    '齐': '齊',
    '齑': '齏',
    '齿': '齒',
    '龀': '齔',
    '龃': '齟',
    '龄': '齡',
    '龅': '齙',
    '龆': '齠',
    '龇': '齜',
    '龈': '齦',
    '龉': '齬',
    '龊': '齪',
    '龋': '齲',
    '龌': '齷',
    '龙': '龍',
    '龚': '龔',
    '龛': '龕',
    '龟': '龜',
    '': '　'
};

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const setting = JSON.parse(fs.readFileSync(path.join(__dirname, "../../config/Setting.json")))
const agent = new Agent({
    // "proxy": {
    // "hostname": "10.10.10.4",
    // "port": 3080
    // }
})
const baseUrl = setting.gateway.baseUrl
const logger = getLogger("gateway")
Object.defineProperty(setting, "accessToken", {
    get() {
        if (!fs.existsSync(path.join(__dirname, "../../data/cache/bearerAccessToken.txt"))) return ""
        return fs.readFileSync(path.join(__dirname, "../../data/Cache/bearerAccessToken.txt")).toString()
    },
    set(value) {
        if (!fs.existsSync(path.join(__dirname, "../../data/cache"))) fs.mkdirSync(path.join(__dirname, "../../data/cache"))
        fs.writeFileSync(path.join(__dirname, "../../data/cache/bearerAccessToken.txt"), String(value))
        return String(value)
    }
})

// async function getIp() {
//     const ip = await fetch("https://ifconfig.me/", { agent, headers: { Accept: "application/json" } }).then(response => response.text())
//     return ip
// }

scheduleJob('0 0 */3 * * *', refreshToken)

const pending = {}

function refreshToken() {
    const name = "token"
    return new Promise(function (resolve, reject) {
        if (!pending[name]) {
            pending[name] = { resolves: [resolve], rejects: [reject] }
        } else {
            pending[name].resolves.push(resolve)
            pending[name].rejects.push(reject)
            return
        }
        refreshTokenFunc()
            .then(result => {
                pending[name].resolves.forEach(resolve => resolve(result))
                delete pending[name]
            })
            .catch(error => {
                pending[name].rejects.forEach(reject => reject(error))
                delete pending[name]
            })
    })
}
async function refreshTokenFunc() {
    try {
        const accountInfo = (await db.query(`SELECT * FROM accounts WHERE personaId = ${db.escape(setting.gateway.defaultAccount)}`))[0]
        if (!accountInfo.available) return
        const { remid, sid, accessToken } = await originLogin({ remid: accountInfo.remid, sid: accountInfo.sid })
        await db.query(`UPDATE accounts SET remid=${db.escape(remid)}, sid=${db.escape(sid)} WHERE personaId = ${accountInfo.personaId}`)
        setting.accessToken = accessToken
        logger.info("OriginAccessToken已刷新")
        return accessToken
    } catch (error) {
        if (error.name === "Error") {
            logger.fatal("默认账号Cookie失效")
            return
        }
        logger.error(error)
    }
}

export function tify(text) {
    return text.replace(/[^\x00-\xFF]/g, replaceFn)
    function replaceFn(s) {
        return ((s in s2tTable) ? s2tTable[s] : s);
    }
}

export async function checkPerm(server, qq, group) {
    const isSU = qq && Core.SuperUser.includes(qq)
    if (group && Core.Config[group] && Core.Config[group].bind && Core.Config[group].bind[server]) server = Core.Config[group].bind[server]
    const result = await db.query(`SELECT gs.name as name, a.group_name as \`group\`, ${isSU ? `${qq} as ` : ""}qq, rotation, s.guid as guid, serverId, gameId, account_id as account FROM (group_admins a LEFT JOIN group_servers gs ON gs.group_name = a.group_name) LEFT JOIN servers s ON gs.guid = s.guid `
        + `WHERE ${isSU ? "" : `qq = ${db.escape(qq)} AND `}gs.name = ${db.escape(server)} UNION SELECT name, group_name as \`group\`, 0 as qq, 0 as rotation, 0 as guid, 0 as serverId, 0 as gameId, 0 as account FROM group_servers WHERE name = ${db.escape(server)}`)
    return result[1] ? Object.assign({ admin: true }, result[0]) : result[0] ? Object.assign({ admin: false }, result[0]) : null
}

export async function searchPlayer({ name, personaId, userId } = {}, callback) {
    if (!name && !personaId && !userId) return null
    if (name && name.substr(0, 1) === "#") {
        personaId = name.substr(1)
        name = null
    }
    const result = await db.query(`SELECT * FROM players WHERE ${name && "name" || personaId && "personaId" || userId && "userId"} = ${db.escape(name || personaId || userId)} ORDER BY updateAt DESC`)
    if (result[0]) {
        if (name) getInfoByName(name).then(persona => { if (typeof callback === "function" && (result[0].personaId !== persona.personaId || result[0].name.toLowerCase() !== persona.name.toLowerCase())) callback(persona) }).catch(error => logger.error(error))
        if (!name && personaId) getInfoByPID(personaId).then(persona => { if (typeof callback === "function" && result[0].name.toLowerCase() !== persona.name.toLowerCase()) callback(persona) }).catch(error => logger.error(error))
        return { name: result[0].name, personaId: result[0].personaId, userId: result[0].userId }
    } else if (name) {
        return await getInfoByName(name)
    } else if (personaId) {
        return await getInfoByPID(personaId)
    } else {
        return null
    }
    async function getInfoByName(isRetry) {
        if (!name.match(/^[\-_0-9A-Za-z]{4,}$/)) return null
        const token = setting.accessToken
        const result = await fetch('https://gateway.ea.com/proxy/identity/personas?namespaceName=cem_ea_id&displayName=' + name, {
            headers: {
                "Host": "gateway.ea.com",
                "Accept": "application/json",
                "X-Expand-Results": true,
                "Authorization": "Bearer " + token
            }
        }).then(result => result.json()).catch(error => {
            if (error.name === "FetchError") throw new GatewayError("网络连接失败")
            throw error
        })
        if (result.error == "invalid_access_token") {
            const accessToken = await refreshToken() || null
            if (!accessToken || isRetry) throw new GatewayError("OriginAccessToken过期")
            return await getInfoByName(true)
        }
        if (!result.personas.persona) return null
        const { displayName, personaId, pidId: userId } = result.personas.persona[0]
        await db.query(`INSERT INTO players (name, personaId, userId) VALUES (${db.escape(displayName)}, ${db.escape(personaId)}, ${db.escape(userId)}) ON DUPLICATE KEY UPDATE name=VALUES(name), personaId=VALUES(personaId), userId=VALUES(userId), updateAt=FROM_UNIXTIME(${Math.floor(new Date().getTime() / 1000)})`)
            .catch(error => logger.error(error))
        return { name: displayName, personaId, userId }
    }
    async function getInfoByPID(personaId) {
        if (!+personaId) return null
        const result = await client({ method: "RSP.getPersonasByIds", params: { personaIds: [personaId] }, account: "default" })
        if (!result[personaId]) return null
        const { nucleusId: userId, displayName: name, avatar } = result[personaId]
        await db.query(`INSERT INTO players (name, personaId, userId, avatar) VALUES (${db.escape(name)}, ${db.escape(personaId)}, ${db.escape(userId)}, ${db.escape(avatar)}) ON DUPLICATE KEY UPDATE name=VALUES(name), personaId=VALUES(personaId), userId=VALUES(userId), avatar=VALUES(avatar), updateAt=FROM_UNIXTIME(${Math.floor(new Date().getTime() / 1000)})`)
            .catch(error => logger.error(error))
        return { name, personaId, userId }
    }
}

export async function updateServerInfo({ gameId, guid, id, serverId } = {}) {
    if (!(gameId || guid || id || serverId)) {
        throw new GatewayError("服务器不存在")
    }
    if (!gameId) {
        const result = await db.query(`SELECT gameId FROM servers WHERE ${guid && "guid" || id && "id" || serverId && "serverId"}`)
        if (!result.length) throw new GatewayError("服务器不存在")
        gameId = result[0].gameId
    }
    try {
        const game = await client({ method: "GameServer.getFullServerDetails", account: "default", params: { gameId } })
        const sql = `INSERT INTO servers (guid, gameId, serverId, name, description, region, country, serverType, serverBookmarkCount, owner, createdDate, expirationDate, updatedDate, updatedBy, rotation, customGameSettings) VALUES ${`("${game.serverInfo.guid}"`
            + `, "${game.serverInfo.gameId}"`
            + `, "${game.rspInfo.server.serverId}"`
            + `, "${game.serverInfo.name.replace(/"/g, '\\"')}"`
            + `, "${game.serverInfo.description.replace(/"/g, '\\"')}"`
            + `, "${game.serverInfo.region}"`
            + `, "${game.serverInfo.country}"`
            + `, "${game.serverInfo.serverType}"`
            + `, "${game.serverInfo.serverBookmarkCount}"`
            + `, "${game.rspInfo.server.ownerId}"`
            + `, FROM_UNIXTIME(${game.rspInfo.server.createdDate / 1000})`
            + `, FROM_UNIXTIME(${game.rspInfo.server.expirationDate / 1000})`
            + `, FROM_UNIXTIME(${game.rspInfo.server.updatedDate / 1000})`
            + `, "${game.rspInfo.server.updatedBy}"`
            + `, '${JSON.stringify(game.serverInfo.rotation)}'`
            + `, '${game.rspInfo.serverSettings.customGameSettings}')`} ON DUPLICATE KEY UPDATE gameId=values(gameId), name=values(name), description=values(description), serverBookmarkCount=values(serverBookmarkCount), expirationDate=VALUES(expirationDate), updatedDate=VALUES(updatedDate), updatedBy=VALUES(updatedBy), rotation=values(rotation), customGameSettings=values(customGameSettings)`
        await db.query(sql)
    } catch (error) {
        logger.error("更新服务器", error)
    }
}

export async function client({ method, params = {}, account, sessionId }, isRetry) {
    const body = { "jsonrpc": "2.0", "method": method, "params": Object.assign(params, { game: "tunguska" }), "id": randomUUID() }
    const init = { body: JSON.stringify(body), method: "POST", headers: { "content-type": "application/json" }, agent }
    if (account) {
        const accountInfo = await db.query(`SELECT * FROM accounts WHERE personaId = ${db.escape(account === "default" ? setting.gateway.defaultAccount : account)}`)
        account = accountInfo[0] || null
        if (!account) throw new GatewayError("账号不存在")
        if (!account.available) throw new GatewayError("账号Cookie失效")
        init.headers["X-GatewaySession"] = account.sessionId
    } else if (sessionId) {
        init.headers["X-GatewaySession"] = sessionId
    }
    const response = await fetch(baseUrl, init).then(response => response.json().catch(error => {
        if (error.name === "SyntaxError" && error.message.match("Unexpected token")) return response.text().then(text => ({ error: { message: text, code: 0 } }))
        throw error
    })).catch(error => {
        if (error.name === "FetchError") throw new GatewayError("网络连接失败")
        throw error
    })
    if (response.error) {
        if (account && response.error.code === -32501) {
            if (isRetry) throw new GatewayError("Session刷新失败")
            try {
                const { remid, sid, sessionId, personaId } = await login({ remid: account.remid, sid: account.sid })
                if (+account.personaId !== +personaId) {
                    await db.query(`INSERT INTO accounts (remid, sid, sessionId, personaId) VALUES (${db.escape(remid)}, ${db.escape(sid)}, ${db.escape(sessionId)}, ${personaId}) SET available=1, remid=VALUES(remid), sid=VALUES(sid), sessionId=VALUES(sid) WHERE personaId=VALUES(personaId)`)
                    await db.query(`UPDATE accounts SET available=0 WHERE personaId = "${account.personaId}"`)
                    logger.error("账号Cookie绑定错误", `${account.personaId}=>${personaId}`)
                    throw new GatewayError("账号Cookie绑定错误")
                }
                logger.info("账号登录", personaId)
                await db.query(`UPDATE accounts SET available=1, remid=${db.escape(remid)}, sid=${db.escape(sid)}, sessionId=${db.escape(sessionId)} WHERE personaId = ${personaId}`)
                return await client({ method, params, account: personaId }, true)
            } catch (error) {
                if (error.name !== "Error") throw error
                await db.query(`UPDATE accounts SET available=0 WHERE personaId = "${account.personaId}"`)
                throw new GatewayError("账号Cookie失效(刷新失败)")
            }
        } else {
            throw new GatewayError(response.error, method)
        }
    } else {
        return response.result
    }
}

class GatewayError extends Error {
    /**
     * @param {string} error 错误消息/错误体
     * @param {number=} code 错误代码
     */
    constructor(error, method) {
        if (typeof error === "object") {
            super(getErrorMessage())
            this.name = "GatewayError";
            error.method = method
            this.error = error
            function getErrorMessage() {
                const code = error.code
                const message = error.message
                if (code === -32501)
                    return 'Session失效'

                if (code === -34501)
                    return '找不到服务器'
                if (code === -34504)
                    return '连接超时(后端)'

                if (code === -32601)
                    return '方法不存在'

                if (code === -32602) {
                    if (message.match('malformed'))
                        return '请求参数格式错误'
                    if (message.match('missing'))
                        return '请求缺少参数'
                    return '请求参数错误'
                }

                if (code === -35150 && method === "Platoons.getPlatoon")
                    return '战队不存在'

                if (code === -35160)
                    return '无权限进行此操作'

                if (code === -32603) {
                    switch (method) {
                        case "RSP.chooseLevel":
                            return '账号不是管理员'
                        case "RSP.kickPlayer":
                            return '无法踢出管理员/机器人不是管理员'
                        case "RSP.getServerDetails":
                            return '账号不是管理员'
                        case "Authentication.getEnvIdViaAuthCode":
                            return '登录失败'
                    }
                    if (message === "Internal Error: java.lang.NumberFormatException")
                        return '数字格式化错误'
                    if (message === "Internal Error: org.apache.thrift.TApplicationException")
                        return '无权限进行此操作'
                    if (message === "Internal Error: java.lang.IllegalArgumentException")
                        return '非法的参数'
                    if (message === "Internal Error: java.lang.NullPointerException")
                        return '空指针'
                    if (message === "Authentication failed")
                        return '验证失败'
                    if (message.match("ERR_AUTHENTICATION_REQUIRED"))
                        return '无权限进行此操作'
                    if (message.match("Error: InvalidServerNameException"))
                        return '服务器名无效'
                    if (message.match("com.fasterxml.jackson.core.JsonParseException"))
                        return 'JSON解析失败'
                    if (message.match("RspErrInvalidMapRotationId()"))
                        return '地图组不存在'
                    if (message.match("errorName: ERR_SYSTEM"))
                        return '系统错误'
                    if (message.match("java"))
                        return '未知服务端错误(java)'
                    if (message.match("apache"))
                        return '未知服务端错误(apache)'
                    if (message.match("Timeout"))
                        return 'blaze超时'
                    if (message.match("WalBlazeError") || message.match("BlazeErrorException"))
                        return '未知服务端错误(blaze)'
                    return '未知服务端错误'
                }

                if (message === "ServerNotRestartableException")
                    return '服务器未开启'
                if (message === "RspErrServerBanMax()")
                    return '服务器Ban已满'
                if (message === "RspErrServerVipMax()")
                    return '服务器VIP已满'
                if (message === "InvalidLevelIndexException")
                    return '地图编号无效'
                if (message === "RspErrUserIsAlreadyVip()")
                    return '玩家已经是VIP了'
                if (message === "InvalidServerIdException") //-32855
                    return '服务器ID不存在'

                if (code === -32851)
                    return '服务器不存在/已过期'
                if (code === -32856)
                    return '玩家不存在'
                if (code === -32857)
                    return '无法处置管理员'
                logger.error(`未知的接口错误`, error)
                return `未知的接口错误`
            }
        } else {
            super(error);
            this.name = "GatewayError";
        }
    }
}

export function login(obj) {
    const name = JSON.stringify(obj)
    return new Promise(function (resolve, reject) {
        if (!pending[name]) {
            pending[name] = { resolves: [resolve], rejects: [reject] }
        } else {
            pending[name].resolves.push(resolve)
            pending[name].rejects.push(reject)
            return
        }
        loginFunc(obj)
            .then(result => {
                pending[name].resolves.forEach(resolve => resolve(result))
                delete pending[name]
            })
            .catch(error => {
                pending[name].rejects.forEach(reject => reject(error))
                delete pending[name]
            })
    })
}
async function loginFunc({ remid, sid }) {
    if (!remid && !sid) throw new Error("未提供Cookie")
    const Cookie = `${remid ? `remid=${remid};` : ''}${sid ? `sid=${sid};` : ''}`
    let response = await fetch('https://accounts.ea.com/connect/auth?response_type=code&locale=zh_CN&client_id=sparta-backend-as-user-pc&display=junoWeb%2Flogin', {
        redirect: 'manual',
        headers: { "Cookie": Cookie },
        agent
    })
    const location = response.headers.get('location')
    if (location.match("fid=")) throw new Error("Cookie失效")
    const authCode = location.replace(/.*code=(.*)/, '$1')
    const newCookie = response.headers.get('set-cookie').split(/\s+/)
    if (newCookie.find(item => item.match(/^sid=/))) {
        sid = newCookie.find(item => item.match(/^sid=/)).replace(/sid=(.*?);/, '$1')
    }
    if (newCookie.find(item => item.match(/^remid=/))) {
        remid = newCookie.find(item => item.match(/^remid=/)).replace(/remid=(.*?);/, '$1')
    }
    const result = await client({ method: "Authentication.getEnvIdViaAuthCode", params: { authCode, "locale": "zh-tw" } })
    return { remid: remid, sid: sid, sessionId: result.sessionId, personaId: result.personaId }
}

async function originLogin({ remid, sid }) {
    if (!remid && !sid) throw new Error("未提供Cookie")
    const Cookie = `${remid ? `remid=${remid};` : ''}${sid ? `sid=${sid};` : ''}`
    const response = await fetch('https://accounts.ea.com/connect/auth?response_type=token&locale=zh_CN&client_id=ORIGIN_JS_SDK&redirect_uri=nucleus%3Arest', {
        redirect: 'manual',
        headers: { "Cookie": Cookie },
        agent
    })
    if (response.status === 200) {
        const newCookie = response.headers.get('set-cookie').split(/\s+/)
        const result = await response.json()
        if (newCookie.find(item => item.match(/^sid=/))) {
            sid = newCookie.find(item => item.match(/^sid=/)).replace(/sid=(.*?);/, '$1')
        }
        if (newCookie.find(item => item.match(/^remid=/))) {
            remid = newCookie.find(item => item.match(/^remid=/)).replace(/remid=(.*?);/, '$1')
        }
        return { remid, sid, accessToken: result.access_token }
    }
    throw new Error("Cookie失效")
};